package test;

import aes.AESCipher;
import org.junit.Test;

import java.util.Arrays;

public class AESCipherTest {
    @Test
    public void encryptAES128() {
        int[] plaintext = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88,
                0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff};
        int[] key = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
                0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f};
        int[] ciphertext = {0x69, 0xc4, 0xe0, 0xd8, 0x6a, 0x7b, 0x04, 0x30, 0xd8,
                0xcd, 0xb7, 0x80, 0x70, 0xb4, 0xc5, 0x5a};

        assert Arrays.equals(ciphertext, AESCipher.encrypt(plaintext, key, AESCipher.Type.AES128));
    }

    @Test
    public void encryptAES192() throws Exception {
        int[] plaintext = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88,
                0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff};
        int[] key = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
                0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14,
                0x15, 0x16, 0x17};
        int[] ciphertext = {0xdd, 0xa9, 0x7c, 0xa4, 0x86, 0x4c, 0xdf, 0xe0, 0x6e,
                0xaf, 0x70, 0xa0, 0xec, 0x0d, 0x71, 0x91};

        assert Arrays.equals(ciphertext, AESCipher.encrypt(plaintext, key, AESCipher.Type.AES192));
    }

    @Test
    public void encryptAES256() throws Exception {
        int[] plaintext = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88,
                0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff};

        int[] key = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
                0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14,
                0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f};

        int[] ciphertext = {0x8e, 0xa2, 0xb7, 0xca, 0x51, 0x67, 0x45, 0xbf, 0xea,
                0xfc, 0x49, 0x90, 0x4b, 0x49, 0x60, 0x89};

        assert Arrays.equals(ciphertext, AESCipher.encrypt(plaintext, key, AESCipher.Type.AES256));
    }

    @Test
    public void decryptAES128() {
        int[] plaintext = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88,
                0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff};
        int[] key = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
                0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f};
        int[] ciphertext = {0x69, 0xc4, 0xe0, 0xd8, 0x6a, 0x7b, 0x04, 0x30, 0xd8,
                0xcd, 0xb7, 0x80, 0x70, 0xb4, 0xc5, 0x5a};

        assert Arrays.equals(plaintext, AESCipher.decrypt(ciphertext, key, AESCipher.Type.AES128));
    }

    @Test
    public void decryptAES192() throws Exception {
        int[] plaintext = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88,
                0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff};
        int[] key = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
                0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14,
                0x15, 0x16, 0x17};
        int[] ciphertext = {0xdd, 0xa9, 0x7c, 0xa4, 0x86, 0x4c, 0xdf, 0xe0, 0x6e,
                0xaf, 0x70, 0xa0, 0xec, 0x0d, 0x71, 0x91};

        assert Arrays.equals(plaintext, AESCipher.decrypt(ciphertext, key, AESCipher.Type.AES192));
    }

    @Test
    public void decryptAES256() throws Exception {
        int[] plaintext = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88,
                0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff};

        int[] key = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
                0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14,
                0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f};

        int[] ciphertext = {0x8e, 0xa2, 0xb7, 0xca, 0x51, 0x67, 0x45, 0xbf, 0xea,
                0xfc, 0x49, 0x90, 0x4b, 0x49, 0x60, 0x89};

        assert Arrays.equals(plaintext, AESCipher.decrypt(ciphertext, key, AESCipher.Type.AES256));
    }

}